Title: All Tags
---
@using FluentBootstrap;

@{    
	List<KeyValuePair<string, int>> Tags = AllDocuments
        .Where(x => x.Metadata.ContainsKey("Published") && x.Metadata.ContainsKey("Tags"))
        .SelectMany(x => x.Metadata.Get<string[]>("Tags"))
        .GroupBy(x => x)
        .Select(x => new KeyValuePair<string, int>(x.Key, x.Count()))
        .OrderBy(x => x.Key)
        .ToList();        
	string Tag = Model.Get<string>("Tag", null);
    ViewData["TitleClass"] = Tag == null ? "icon-tags" : "icon-tag-2";
}
@Html.Partial("_Title")

@using (Bs.Div().AddCss("container-sm-height").Begin())
{
    using (var row = Bs.GridRow().AddCss("row-sm-height").Begin())
    {
        if (Tag != null)
        {
            using (row.GridColumn().SetSm(8).AddCss("right-border", "col-sm-height").Begin())
            {            
                ViewData["PostListDocuments"] = AllDocuments
                    .Where(x => x.Metadata.ContainsKey("Published") 
                        && x.Metadata.ContainsKey("Tags") 
                        && x.Metadata.Get<string[]>("Tags").Contains(Tag))
                    .OrderByDescending(x => x.Get<DateTime>("Published"));
                @Html.Partial("_PostList");
                <hr class="@Css.VisibleXsBlock" />
            }
        }
		
        using (row.GridColumn().SetSm(Tag == null ? 12 : 4).AddCss("col-sm-height").Begin())
        {
            foreach (KeyValuePair<string, int> tag in Tags)
            {
                var tagButton = Html.TagButton(tag.Key, tag.Value, tag.Key == Tag ? ButtonState.Primary : ButtonState.Default);
                if(Tag != null)
                {
                    tagButton.SetSize(ButtonSize.Xs);
                }
                @tagButton
            }
        }
    }
}