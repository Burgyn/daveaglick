#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Somedave.Views.Blog.Posts
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using FluentBootstrap;
    using Somedave;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Blog/Posts/introducing-nxdb.cshtml")]
    public partial class introducing_nxdb : Somedave.BlogPostViewPage<dynamic>
    {
        public introducing_nxdb()
        {
        }
        public override void Execute()
        {
            
            #line 1 "..\..\Views\Blog\Posts\introducing-nxdb.cshtml"
  
    Title = "Introducing Nxdb";
    Lead = "A high-performance embedded XML database for .NET.";
    Published = new DateTime(2012, 2, 24);
    Tags = new[] { "Nxdb", "XML", "XQuery", "database" };

            
            #line default
            #line hidden
WriteLiteral(@"

<p>For the second time in as many weeks, I have the pleasure of announcing a new open source project. This time I've released Nxdb, a high-performance embedded XML database for .NET with full XQuery support. It is essentially a .NET binding for the excellent <a");

WriteLiteral(" href=\"http://basex.org/\"");

WriteLiteral(@">BaseX</a> Java XML database. However, Nxdb goes well beyond a simple wrapper by providing a native .NET API suitable for embedding (the primary focus of BaseX is on client/server uses), providing additional functionality to interface directly with .NET classes and objects, and rethinking several aspects of the BaseX design for the embedded use case. The underlying BaseX code is cross-compiled to IL using <a");

WriteLiteral(" href=\"http://www.ikvm.net/\"");

WriteLiteral(">IKVM</a> making Nxdb 100% native .NET, usable on all .NET platforms including <a" +
"");

WriteLiteral(" href=\"http://www.mono-project.com\"");

WriteLiteral(">Mono</a>.</p>\r\n\r\n<p>This project has a long history. Around the fall of 2008, my" +
" company, DRAC was tasked with developing an entirely new cross-platform graphic" +
"al user interface for one of the US Air Force\'s most complex models. The model i" +
"tself used over a hundred different input files, each with slightly different gr" +
"ammar and syntax. What we needed was a way to store, query, and manipulate all o" +
"f this data in a consistent way. XML seemed like an ideal choice given it\'s abil" +
"ity to represent data hierarchically and powerful XQuery query language. Having " +
"already made the decision to use Mono as our platform, we scoured both the open " +
"source community and commercial vendors to find a database backend that was a go" +
"od fit. We were surprised to discover that there weren\'t very many suitable embe" +
"dded XML databases for .NET and the ones we did find were either too slow for pr" +
"ocessing and querying the volume of data we needed to work with or had cumbersom" +
"e and limited APIs that didn\'t allow the control we needed.</p>\r\n\r\n<p>Thankfully" +
", we stumbled on BaseX when it was a fairly early project. We were immediately i" +
"mpressed with the completeness of it\'s query engine and the fast performance. Un" +
"fortunately it was written in Java and we were using .NET and had already sunk c" +
"onsiderable resources into the GUI shell. Having used IKVM to cross-compile Java" +
" code before, we decided to give it a shot for BaseX and were pleased to discove" +
"r it converted and ran quite well. Over the intervening years we\'ve separated ou" +
"r BaseX binding from the original project, applied it to many other projects, an" +
"d watched as BaseX has flourished. Nxdb is now used in production code every day" +
" and we\'re excited to share it with the rest of the open source community.</p>\r\n" +
"\r\n<h1>Usage</h1>\r\n\r\n<p>Nxdb is designed to be easy to use. It provides two prima" +
"ry means of working with the database. The first is by directly working with the" +
" database through classes that represent XML nodes. The other main interface is " +
"through the evaluation of XQuery expressions.</p>\r\n\r\n<p>The Database class serve" +
"s as the starting point for working with an Nxdb database. It encapsulates all o" +
"f the operations on a database instance and provides methods for getting node ob" +
"jects and evaluating queries. Before use, Nxdb must be initialized as follows us" +
"ing the static Database.Initialize() method (path is where all of the database f" +
"iles will be stored):</p>\r\n\r\n<pre><code");

WriteLiteral(" class=\"language-csharp\"");

WriteLiteral(">Database.Initialize(path);</code></pre>\r\n\r\n<p>Once that\'s done, a new or existin" +
"g database can be obtained via the static Database.Get() method:</p>\r\n\r\n<pre><co" +
"de");

WriteLiteral(" class=\"language-csharp\"");

WriteLiteral(">Database.Get(databaseName);</code></pre>\r\n\r\n<p>Once a Database instance has been" +
" obtained, XML content can be added, documents fetched, and queries executed. A " +
"very simple example usage might look like this:</p>\r\n\r\n<pre><code");

WriteLiteral(" class=\"language-csharp\"");

WriteLiteral(@">using Nxdb;
Database.Initialize(""C:\Temp\NxdbData"");
using(Database db = Database.Get(""Example""))
{
  db.Add(""DocA"", ""<A><B>b</B><C>c</C></A>"");
  Document doc = db.GetDocument(""DocA"");
  Console.Write(doc.OuterXml);
}</code></pre>

<h1>Obtaining</h1>

<p>Nxdb is open source and released under the Apache 2.0 license. It can be obtained here: <a");

WriteLiteral(" href=\"https://github.com/somedave/Nxdb\"");

WriteLiteral(">https://github.com/somedave/Nxdb</a></p>\r\n");

        }
    }
}
#pragma warning restore 1591
