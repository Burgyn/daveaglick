#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Somedave.Views.Blog.Posts
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using FluentBootstrap;
    using Somedave;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Blog/Posts/xquery-function-to-get-the-number-of-week-work-days.cshtml")]
    public partial class xquery_function_to_get_the_number_of_week_work_days : Somedave.BlogPostViewPage<dynamic>
    {
        public xquery_function_to_get_the_number_of_week_work_days()
        {
        }
        public override void Execute()
        {
            
            #line 1 "..\..\Views\Blog\Posts\xquery-function-to-get-the-number-of-week-work-days.cshtml"
  
    Title = "XQuery Function To Get The Number Of Week/Work Days";
    Published = new DateTime(2010, 6, 17);
    Tags = new[] { "XML", "XQuery", "networkdays", "weekdays" };

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n<p>Today\'s post is an XQuery function designed to get a count of the number o" +
"f week (or work) days between two dates. It\'s designed to mimic the Excel <code>" +
"NETWORKDAYS</code> function. I got the algorithm from Bernal Schooley in this <a" +
"");

WriteLiteral(" href=\"http://www.eggheadcafe.com/community/aspnet/2/44982/how-to-calculate-num-o" +
"f-w.aspx\"");

WriteLiteral(">thread</a> and then adapted it to XQuery. It also makes use of the <a");

WriteLiteral(" href=\"http://www.xqueryfunctions.com/\"");

WriteLiteral(">FunctX</a> <code><a");

WriteLiteral(" href=\"http://www.xqueryfunctions.com/xq/functx_day-of-week.html\"");

WriteLiteral(@">day-of-week</a></code> function, so if you have FunctX functions already referenced you can take that part out.</p>

<pre><code>declare namespace functx = ""http://www.functx.com"";

declare function functx:day-of-week
 ($date as xs:anyAtomicType?) as xs:integer? {
 if (empty($date))
 then ()
 else
  xs:integer((xs:date($date) - xs:date('1901-01-06')) div xs:dayTimeDuration('P1D')) mod 7
};

declare function local:weekdays
 ($start as xs:anyAtomicType?, $end as xs:anyAtomicType?) as xs:integer? {
 if(empty($start) or empty($end))
 then()
 else
  if($start > $end)
  then -local:weekdays($end, $start)
  else
   let $dayOfWeekStart := functx:day-of-week($start)
   let $dayOfWeekEnd := functx:day-of-week($end)
   let $adjDayOfWeekStart := if($dayOfWeekStart = 0) then 7 else $dayOfWeekStart
   let $adjDayOfWeekEnd := if($dayOfWeekEnd = 0) then 7 else $dayOfWeekEnd
   return
    if($adjDayOfWeekStart <= $adjDayOfWeekEnd)
    then xs:integer((xs:integer(days-from-duration(xs:date($end) - xs:date($start)) div 7) * 5)
     + max(((min((($adjDayOfWeekEnd + 1), 6)) - $adjDayOfWeekStart), 0)))
    else xs:integer((xs:integer(days-from-duration(xs:date($end) - xs:date($start)) div 7) * 5)
     + min((($adjDayOfWeekEnd + 6) - min(($adjDayOfWeekStart, 6)), 5)))
};</code></pre>
<p>Usage: <code>local:weekdays('2009-06-01', '2010-06-30')</code></p>
");

        }
    }
}
#pragma warning restore 1591
